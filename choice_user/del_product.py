import asyncio
from aiogram.fsm.context import FSMContext
from aiogram import Router, Bot, F
from aiogram.types import Message, CallbackQuery
from parsing.parsing_wb import ParsingWB
from keyboards.inline import keyboard_product, DelCallbackFactory, menu_link_kb
from sql.bot_sql import sql
from utils.states import DelProduct

router = Router()


@router.callback_query(F.data == 'del_product')
async def answer_link_user(callback: CallbackQuery, state: FSMContext, bot: Bot):
    await state.set_state(DelProduct.start_del)
    data = sql.look_product(callback.from_user.id)
    if not data:
        await callback.message.answer(text='–í –±–∞–∑–µ –Ω–µ—Ç –≤–∞—à–∏—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
                                           '–ù–∞–∂–º–∏ - /menu, —á—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –º–µ–Ω—é')
        await bot.delete_message(
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id
        )
    else:

        await callback.message.answer(
            text=f'–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å',
            reply_markup=keyboard_product(callback.from_user.id)
        )
        await bot.delete_message(
            chat_id=callback.from_user.id,
            message_id=callback.message.message_id
        )


@router.callback_query(DelCallbackFactory.filter(), DelProduct.start_del)
async def callbacks_num_change(
        callback: CallbackQuery,
        callback_data: DelCallbackFactory,
        state: FSMContext,
        bot: Bot):
    sql.del_product(callback_data.action)
    await callback.message.edit_reply_markup(reply_markup=None)
    await callback.message.answer(
        text=f'<b>–¢–æ–≤–∞—Ä: –∞—Ä—Ç–∏–∫—É–ª - {callback_data.action} —É–¥–∞–ª–µ–Ω</b>',
    )
    await callback.message.answer(
        text=f'üü£–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å',
        reply_markup=menu_link_kb
    )
    await state.clear()
    await bot.delete_message(
        chat_id=callback.from_user.id,
        message_id=callback.message.message_id
    )


